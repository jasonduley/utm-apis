swagger: '2.0'
info:
  version: 'v4'
  title: Public Safety USS
  description: A USS with the Public Safety role implements this API in addition to the base USS API.
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utm.arc.nasa.gov/'
    email: joseph.rios@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
  termsOfService: >

    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
    WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
    BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
    SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
    SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF
    PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN
    ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR
    RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR
    ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER,
    GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING
    THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES
    IT "AS IS."

    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
    AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS
    WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE
    RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING
    FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING
    FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY
    AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
    SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY
    LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
    UNILATERAL TERMINATION OF THIS AGREEMENT.

host: uss.defined.url
basePath: /
schemes:
  - https

securityDefinitions:
  basicAuth:
    type: basic
security:
    - basicAuth: []

paths:
  /uas/{uvin}:
    get:
      description: Returns information on vehicle with the given uvin.
      parameters:
        - in: path
          name: "uvin"
          type: "string"
          required: true
          description: "specifies the vehicle id"
        - name: "lat"
          in: "query"
          description: "Latitude of point for Geographic search. Approximate position of the vehicle."
          required: true
          maximum: 90.0
          minimum: -90.0
          type: "number"
          format: "double"
        - name: "lon"
          in: "query"
          description: "Longitude of point for Geographic search. Approximate position of the vehicle."
          required: true
          type: "number"
          maximum: 180.0
          minimum: -180.0
          format: "double"

      responses:
        200:
          description: "Successfully returned uvin and its associated operator information"
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/VehicleOperationData
        401:
          description: "Unauthorized"
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

        400:
          description: "Bad request. Typically validation error. Fix your request\
            \ and retry."
        503:
          description: Service Unavailable
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
  /uas:
    get:
      description: Returns vehicle information when a partial uvin or an faa_number is supplied. Atleast one parameter is required.
      parameters:
        - name: "partial_uvin"
          in: "query"
          description: "Part of the uvin uuid."
          maximum: 36.0
          minimum: 6
          type: "string"
        - name: "faa_number"
          in: "query"
          description: "Full faa_number."
          maximum: 10.0
          minimum: 6
          type: "string"
        - name: "lat"
          in: "query"
          description: "Latitude of point for Geographic search. Approximate position of the vehicle."
          maximum: 90.0
          minimum: -90.0
          type: "number"
          format: "double"
        - name: "lon"
          in: "query"
          description: "Longitude of point for Geographic search. Approximate position of the vehicle."
          type: "number"
          maximum: 180.0
          minimum: -180.0
          format: "double"
      responses:
        200:
          description: "Successfully returns matched uvins and its associated operator information"
          schema:
            type: "array"
            items:
              $ref: >-
                 https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/VehicleOperationData

        401:
          description: "Unauthorized"
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

        400:
          description: "Bad request. Typically validation error. Fix your request\
            \ and retry."
        503:
          description: Service Unavailable
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse

  /uas/operations:
    get:
      description: Returns all operations around the point of reference
      parameters:
        - name: distance
          in: query
          description: >-
            Distance from reference_point to find operations. Ignored if
            reference_point is not provided.  Units are feet.  Returns all
            operations that have any operation_volumes that interesect the 2D
            circle defined by distance and reference_point.  Default value only
            has meaning when reference_point parameter is provided.
          type: integer
          format: int32
          maximum: 60762
          minimum: 1
          default: 300
          required: false
        - name: reference_point
          in: query
          description: >-
            A single point used to find all operations within some distance from
            that point. Returns all operations that have any operation_volumes
            that interesect the 2D circle defined by distance and
            reference_point.  When distance it excluded and reference_point is
            included, use default value (300ft) for distance.

            Described as a GeoJSON position.  The value is equivalent to what
            would be seen in the "coordinates" field for a GeoJSON Point
            object.  See https://tools.ietf.org/html/rfc7946#section-3.1.1 for
            further reference.  Example would be reference_point=[-122.056364,
            37.414371] (URL safe:
            reference_point%3D%5B-122.056364%2C%2037.414371%5D). As per GeoJSON
            spec, this is long-lat format in the WGS84 reference system.

            MUST NOT include a third coordinate element, strictly 2D.
          type: string
          format: geojson-position
          maxLength: 100
          required: false
        - name: "time"
          in: "query"
          required: true
          description: "Known operations in this area as of this time"
          type: "string"
          format: "date-time"
          minLength: 20
          maxLength: 25

      responses:
        200:
          description: "Returns all operations within the specified geography"
          schema:
            type: "array"
            items:
              $ref: >-
                https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/Operation
        401:
          description: "Unauthorized"
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        400:
          description: "Bad request. Typically validation error. Fix your request\
             and retry."
  /restrictions:
    get:
      description: >-
        Get constraint messages.
      parameters:
        - name: limit
          in: query
          description: The maximum number or records to return.
          required: false
          type: integer
          default: 10
          maximum: 100
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
          format: int32
        - name: offset
          in: query
          description: The index from which to begin the list of returned records.
          required: false
          type: integer
          default: 0
          minimum: 0
          exclusiveMinimum: false
          format: int32
        - name: distance
          in: query
          description: >-
            Distance from reference_point to find restrictions. Ignored if
            reference_point is not provided.  Units are feet.  Returns all
            restrictions that have any geography values that interesect the 2D
            circle defined by distance and reference_point.  Default value only
            has meaning when reference_point parameter is provided.
          type: integer
          format: int32
          maximum: 60762
          minimum: 1
          default: 300
          required: false
        - name: reference_point
          in: query
          description: >-
            A single point used to find all restrictions within some distance from
            that point. Returns all
            restrictions that have any geography values that interesect the 2D
            circle defined by distance and reference_point.
            When distance it excluded and reference_point is
            included, use default value (300ft) for distance.

            Described as a GeoJSON position.  The value is equivalent to what
            would be seen in the "coordinates" field for a GeoJSON Point
            object.  See https://tools.ietf.org/html/rfc7946#section-3.1.1 for
            further reference.  Example would be reference_point=[-122.056364,
            37.414371] (URL safe:
            reference_point%3D%5B-122.056364%2C%2037.414371%5D). As per GeoJSON
            spec, this is long-lat format in the WGS84 reference system.

            MUST NOT include a third coordinate element, strictly 2D.
          type: string
          format: geojson-position
          maxLength: 100
          required: false
      responses:
        '200':
          description: Successful request.
          schema:
            type: array
            items:
              $ref: >-
                https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/ConstraintMessage
        '401':
          description: "Unauthorized"
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"

        '400':
          description: "Bad request. Typically validation error. Fix your request\
            \ and retry."
  /restrictions/{message_id}:
    get:
      description: >-
        Get a specific constraint message.
      parameters:
        - in: path
          name: message_id
          required: true
          type: string
          description: GET by message_id
      responses:
        '200':
          description: Successful request.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/ConstraintMessage
        '401':
          description: "Unauthorized"
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"

        '400':
          description: "Bad request. Typically validation error. Fix your request\
            \ and retry."
    put:
      description: >-
        Endpoint to PUT a constraint message that will be sent to LUN members
        intersecting the constraint geography.
      parameters:
        - in: path
          name: message_id
          required: true
          type: string
          description: PUT by message_id
        - in: body
          name: constraint_message
          description: The ConstraintMessage being sent
          required: true
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/ConstraintMessage
      responses:
        '204':
          description: Constraint data received. No content returned.
        '400':
          description: Bad request. Typically validation error. Fix your request and retry.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft-alt/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
