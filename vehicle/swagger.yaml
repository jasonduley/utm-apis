swagger: '2.0'
info:
  version: 'v4'
  title: Vehicle Registration
  description: Validates that the vehicle ID was properly registered for a NASA event.
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utm.arc.nasa.gov/'
    email: joseph.rios@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
  termsOfService: >

    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
    WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
    BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
    SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
    SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF
    PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN
    ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR
    RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR
    ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER,
    GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING
    THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES
    IT "AS IS."


    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
    AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS
    WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE
    RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING
    FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING
    FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY
    AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
    SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY
    LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
    UNILATERAL TERMINATION OF THIS AGREEMENT.

host: utmregistry.arc.nasa.gov
basePath: /api
schemes:
  - https
securityDefinitions:
  vehicle_oauth:
    type: oauth2
    authorizationUrl: 'https://utm.defined.host/oauth/token'
    flow: implicit
    scopes:
      'utm.nasa.gov_read.publicsafety': "retrieve public safety data, for example, a Public Safety USS retrieves data."
      'utm.nasa.gov_read.uvin': "retrieve uvin registration data, for example, a USS checks that a vehicle is registered."
      'utm.nasa.gov_write.uvin': "Write uvin data, for example, a Vehicle Authority enters new data."

paths:
  /uvins/{uvin}:
    get:
      description: >
        Returns information on vehicle with the given uvin. If it is a valid request
        and the uvin exists in the database, a VehicleReg model object is returned
        with an 200 HTTP code.  If it is a valid request and the uvin does not exist in
        the database, an empty array is returned also with a  200 HTTP code.
      security:
        - vehicle_oauth:
            - utm.nasa.gov_read.publicsafety
            - utm.nasa.gov_read.uvin
      parameters:
        - in: path
          name: "uvin"
          type: "string"
          required: true
          description: "Specifies the vehicle id"
        - in: header
          name: "Accept"
          type: "string"
          required: true
          description: "Must be 'application/json'"
        - in: query
          name: "org-code"
          type: "string"
          description: "Organization authenticity code."
      responses:
        200:
          description: "Successful"
          schema:
            $ref: '#/definitions/VehicleReg'
        401:
          description: "Unauthorized"
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

        400:
          description: "Bad request. Typically validation error. Fix your request\
            \ and retry."
        503:
          description: Service Unavailable
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
  /uvins/:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: USS registers a vehicele on behalf of a vehicle owner
      security:
        - vehicle_oauth:
            - 'utm.nasa.gov_write.uvin'

      parameters:
        - in: header
          name: "Accept"
          type: "string"
          required: true
          description: "Must be 'application/json'"
        - in: formData
          name: vehicle-type-id
          type: string
          required: true
          description: Vehicle type id of vehicle to be registered
        - in: formData
          name: org-uuid
          type: string
          required: true
          description: Organization uuid
        - in: formData
          name: org-code
          required: true
          type: string
          description: "Organization authenticity code."
        - in: formData
          name: vehicle-name
          required: true
          type: string
          description: Name of vehicle instance
        - in: formData
          name: event-id
          type: number
          required: true
          description: Event identifier; Enter X for TCLX
        - in: formData
          name: n-number
          type: string
          description: N-number of aircraft
        - in: formData
          name: faa-number
          type: string
          description: FAA number of aircraft
      produces:
        - application/json
      responses:
        201:
          description: "Successful"
          schema:
            $ref: '#/definitions/VehiclePost'
  /orgs/{uvin}:
    get:
      description: >
        Returns information on vehicle owner, for example, a Public Safety
          USS gets vehicle owner's contact data.
      security:
        - vehicle_oauth:
            - 'utm.nasa.gov_read.publicsafety'
      parameters:
        - in: path
          name: "uvin"
          type: "string"
          required: true
          description: "Specifies the vehicle id"
        - in: header
          name: "Accept"
          type: "string"
          required: true
          description: "Must be 'application/json'"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: '#/definitions/OrgData'
definitions:
  OrgData:
    type: object
    properties:
      orgName:
        type: string
        example: "Beer Buzz, LLC"
      POC:
        type: object
        properties:
          name:
            type: string
          tel:
            type: string
          email:
            type: string
  VehiclePost:
    type: object
    properties:
      uvin:
        type: string
        format: uuid
        maxLength: 36
        minLength: 36
        example: "00000000-0000-0000-0000-000000000000"
      vehicleTypeId:
        type: string
        format: uuid
        maxLength: 36
        minLength: 36
        example: "00000000-0000-0000-0000-000000000000"
      createdTS:
        type: string
        example: "2018-01-14 02:33:01.73454"
      nNumber:
        type: string
        example: "N98765"
      faaNumber:
        type: string
        example: "FA1231232132131"
      vehicleName:
        type: string
        description: A vehicle name identifier that has been given to the vehicle instance
        example: "FlyingV"
  VehicleReg:
    type: object
    properties:
      uvin:
        type: string
        format: uuid
        maxLength: 36
        minLength: 36
        example: "00000000-0000-0000-0000-000000000000"
      date:
        type: string
        example: "2018-01-14 02:33:01.73454"
      registeredBy:
        type: string
        example: "registeredBy"
      nNumber:
        type: string
        example: "N98765"
      faaNumber:
        type: string
        example: "FA1231232132131"
      vehicleName:
        type: string
        description: A vehicle name identifier that has been given to the vehicle instance
        example: "FlyingV"
      manufacturer:
        type: string
        description: Name of the manufacturer
        example: "Lockheed Martin"
      model:
        type: string
        description: Model name
        example: "Indago"
      class:
        type: string
        description: Vehicle class
        example: "Multi-Rotor"
      accessType:
        type: string
        description: Designates whether or not the vehicle type is publically available.  If private it can only be viewed by the manufacturer
        example: "public"
      vehicleTypeId:
        type: string
        format: uuid
        maxLength: 36
        minLength: 36
        example: "00000000-0000-0000-0000-000000000000"
      org-uuid:
        type: string
        format: uuid
        maxLength: 36
        minLength: 36
        example: "00000000-0000-0000-0000-000000000000"
