swagger: '2.0'
info:
  description: >-
    This API describes the RESTful interface to the USS discovery service within
    the UTM System.  This service allows for authenticated USS operators to
    submit information about their USS and for all stakeholders to query for a
    USS Instances matching certain parameters.
  version: v4
  title: UTM USS Service Discovery
  termsOfService: >

    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY
    WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
    BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
    SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
    SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF
    PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN
    ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR
    RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR
    ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER,
    GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING
    THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES
    IT "AS IS."


    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
    AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS
    WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE
    RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING
    FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING
    FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY
    AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
    SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY
    LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
    UNILATERAL TERMINATION OF THIS AGREEMENT.
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utm.arc.nasa.gov/'
    email: joseph.rios@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
host: utm.defined.url
basePath: /ussdisc
schemes:
  - https

tags:
  - name: A. Required Endpoints
    description: The primary RESTful endpoints for sharing USS Instance data.
securityDefinitions:
  uss_discovery_security:
    type: oauth2
    tokenUrl: 'https://utm.defined.host/oauth/token'
    flow: application
    scopes:
      'utm.nasa.gov_write.conflictmanagement':  Subject can read and write conflict management data.

paths:
  /uss:
    get:
      tags:
        - A. Required Endpoints
      summary: Request information regarding USS instances
      description: Allows for querying for USS instances.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "fields"
          in: "query"
          description: "The specific subset of fields to return. Comma separated list. \
              (If list is empty, no fields are returned.)
              \ Default will be all fields (i.e. when fields parameter is not included in the query). "
          required: false
          type: "array"
          items:
              type: "string"
        - name: uss_name
          in: query
          required: false
          description: Returns uss_instances with a particular uss_name.
          type: string
          maxLength: 100
        - name: before
          in: query
          required: false
          description: >-
            Returns uss_instances active during and before the given time i.e.,
            time_available_begin < before. Example: 2017-08-20T14:11:56.118Z
          type: string
          format: date-time
          minLength: 20
          maxLength: 25
        - name: after
          in: query
          required: false
          description: >-
            Returns uss_instances active during and after the given time i.e.,
            time_available_end > before. Example:2017-08-20T14:11:56.118Z
          type: string
          format: date-time
          minLength: 20
          maxLength: 25
        - name: contains_point
          in: query
          required: false
          description: >-
            Returns uss_instances containing the given Point. The coordinates
            are comma delimited. Example: -121.2204,36.6684
          type: array
          maxItems: 2
          minItems: 2
          items:
            type: number
            format: double
        - name: contains_bbox
          in: query
          required: false
          description: >-
            Returns uss_instances containing the given Bbox. The coordinates are
            comma delimited (lon_min,lat_min,lon_max,lat_max). Example: -121.3193,36.6089,-121.2204,36.6684
          type: array
          maxItems: 4
          minItems: 4
          items:
            type: number
            format: double
        - name: intersects_bbox
          in: query
          required: false
          description: >-
            Returns uss_instances intersecting the given Bbox. The coordinates
            are comma delimited (lon_min,lat_min,lon_max,lat_max). Example: -121.1133,36.5317,-121.0941,36.6530
          type: array
          maxItems: 4
          minItems: 4
          items:
            type: number
            format: double
        - name: reference_point
          in: query
          required: false
          description: >-
            Returns uss_instances around the given point within the 'distance'.
            It requires parameter 'distance' to be provided.

            Described as a GeoJSON position.  The value is equivalent to what
            would be seen in the "coordinates" field for a GeoJSON Point
            object.  See https://tools.ietf.org/html/rfc7946#section-3.1.1 for
            further reference.  Example would be reference_point=[-122.056364,
            37.414371] (URL safe:
            reference_point%3D%5B-122.056364%2C%2037.414371%5D). As per GeoJSON
            spec, this is long-lat format in the WGS84 reference system.

            MUST NOT include a third coordinate element, strictly 2D.
          type: array
          maxItems: 2
          minItems: 2
          items:
            type: number
            format: double
        - name: distance
          in: query
          required: false
          description: >-
            Distance (in feet) around the 'reference_point'.
            It requires parameter 'reference_point' to be provided.
          type: number
          format: double
          minimum: 0
        - name: sort
          in: query
          description: >-
            A valid field name to use for sorting records. If multiple fields
            are provided, the sorting is based on the ordered priorty of that
            list.
          required: false
          type: string
          default: time_submitted
        - name: sort_increasing
          in: query
          description: >-
            For optional use with the 'sort' parameter. If 'sort' is not
            provided, then 'sort_increasing' will be ignored. Boolean value.  If
            multiple fields are provided in the 'sort' paramenter, this boolean
            value will apply to all of them.
          required: false
          type: boolean
          default: true
        - name: limit
          in: query
          description: >-
            The maximum number or records to return. Default 1000.

            Please note that if there are more than 1000 instances, the caller
            might not know there are more.  It is recommended to call again
            with offset = 1000, if your first call returns exactly 1000 records.

            Also note if we are returning 1000 records, there is probably
            something very wrong with overall design.  Limit added now for
            testing purposes as concept is further developed.
          required: false
          type: integer
          default: 1000
          minimum: 1
          maximum: 1000
          format: int32
        - name: offset
          in: query
          description: The index from which to begin the list of returned records. Default 0.
          required: false
          type: integer
          default: 0
          format: int32
      responses:
        '200':
          description: Successful data request. Response includes requested data.
          schema:
            type: array
            items:
              $ref: >-
                https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UssInstance
        '400':
          description: Bad request. Typically validation error. Fix your request and retry.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '401':
          description: Invalid or missing access_token provided.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '429':
          description: Too many recent requests from you. Wait to make further queries.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
  '/uss/{id}':
    get:
      tags:
        - A. Required Endpoints
      summary: Request information regarding a single USS Instance
      description: Allows for querying for USS Instances.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: Successful data request. Response includes requested data.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UssInstance
        '400':
          description: Bad request. Typically validation error. Fix your request and retry.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '401':
          description: Invalid or missing access_token provided.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '429':
          description: Too many recent requests from you. Wait to make further queries.
    put:
      tags:
        - A. Required Endpoints
      summary: Submit USS Instance and USS Instance updates
      description: >-
        Allows for USS operators to submit a new USS Instance or update a
        previous USS Instance submission.
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - uss_discovery_security:
            - utm.nasa.gov_write.conflictmanagement
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: uss_instance
          description: |
            USS Instance with the following properties:
              1. Contains a valid uss_instance_id.
              2. Instance has time_available_end value that is in the future.
              3. No date-time fields that are in the past are modified.
              4. Other rules for a USS Instance POST are satisfied.
          required: true
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UssInstance
      responses:
        '204':
          description: USS Instance received. No content returned.
        '400':
          description: Bad request. Typically validation error. Fix your request and retry.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '401':
          description: Invalid or missing access_token provided.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
        '429':
          description: Too many recent requests from you. Wait to make further queries.
          schema:
            $ref: >-
              https://raw.githubusercontent.com/nasa/utm-apis/v4-draft/utm-domains/utm-domain-commons.yaml#/definitions/UTMRestResponse
